package com.example.cnpm.main.frame;

import java.awt.event.KeyEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import java.util.ArrayList;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Vector;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Date;
import java.awt.event.*;

public class Ban_giao extends javax.swing.JFrame {
	private DefaultTableModel model;
    Vector vctHeader = new Vector();
    Vector vctData = new Vector();
    
    public class quan_ly{
        private Integer ID;
        private String maloai;
        private Integer SL_thang_nay;
        private Integer SL_thang_truoc;
        private Date Ngay_kiem_tra;
        private String Hien_trang;
        
        public quan_ly(Integer ID, String maloai, Integer SL_thang_nay, Integer SL_thang_truoc, Date Ngay_kiem_tra,String Hien_trang){
            this.ID = ID;
            this.maloai = maloai;
            this.SL_thang_nay = SL_thang_nay;
            this.SL_thang_truoc = SL_thang_truoc;
            this.Ngay_kiem_tra = Ngay_kiem_tra;
            this.Hien_trang = Hien_trang;
        }
        
        public Integer getId(){
            return ID;
        }

        public String getID(){
            return maloai;
        }
        
        public Integer getThisNumber(){
            return SL_thang_nay;
        }
        
        public Integer getBeforeNumber(){
            return SL_thang_truoc;
        }
        
        public Date getDate(){
            return Ngay_kiem_tra;
        }
        
        public String getState(){
            return Hien_trang;
        }
    }
    
    public Ban_giao() {
        initComponents();
        loadDataIntoTable(); 
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                setVisible(false);
                dispose();
            }
        });
    }
    
    private void loadDataIntoTable(){
        model = new DefaultTableModel();
        Vector column = new Vector();
        column.add("Index");
        column.add("Loại");
        column.add("Số lượng tháng này");
        column.add("Số lượng tháng trước");
        column.add("Ngày kiểm tra");
        column.add("Hiện trạng");
        model.setColumnIdentifiers(column);
        List<quan_ly> list = getDataFromDB();
        for (int i = 0; i < list.size(); i++) {
            quan_ly ql = (quan_ly)list.get(i);
            Vector row = new Vector();
            row.add(ql.getId());
            row.add(ql.getID());
            row.add(ql.getThisNumber());
            row.add(ql.getBeforeNumber());
            row.add(ql.getDate());
            row.add(ql.getState());
            model.addRow(row);
        }

        jTable1.setModel(model);
        
    }
    
    private List<quan_ly> getDataFromDB(){
        List<quan_ly> list = new ArrayList<quan_ly>();
        try{
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/cnpm", "root", "");
            String sql = "SELECT ID, maloai, SL_thang_nay, SL_thang_truoc, Ngay_kiem_tra, Hien_trang FROM quan_ly_hang_thang";
            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            
            while (rs.next()) {
                quan_ly ql = new quan_ly(rs.getInt("ID"),rs.getString("maloai"), rs.getInt("SL_thang_nay"), rs.getInt("SL_thang_truoc"), rs.getDate("Ngay_kiem_tra") ,rs.getString("Hien_trang"));
                list.add(ql);
            }
            
        }catch(SQLException e){
            e.printStackTrace();
        }
        return list;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        jTextField1 = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFocusCycleRoot(false);

        jToolBar1.setRollover(true);

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/New-file-icon.png"))); // NOI18N
        jButton1.setText("New");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Save-icon.png"))); // NOI18N
        jButton2.setText("Save");
        jButton2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton2);

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/45.png"))); // NOI18N
        jButton3.setText("Edit");
        jButton3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Button-Delete-icon.png"))); // NOI18N
        jButton4.setText("Delete");
        jButton4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);

        jButton5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search-icon.png"))); // NOI18N
        jButton5.setText("Search");
        jButton5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Ngày kiểm tra:");

        jDateChooser1.setDateFormatString("d/M/y");
        jDateChooser1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setText("Loại:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("SL tháng này:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("SL tháng trước:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Hiện trạng mới:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title4", "Title5"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jComboBox1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bàn", "Ghế nhựa", "Ghế băng", "Khăn trải bàn", "Micro", "Tivi" }));

        jComboBox2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "100%", "90%", "80%", "70%", "60%", "50%", "40%", "30%", "20%", "10%", "0%" }));

        jSpinner1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        jSpinner2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        jTextField1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextField1.setText("Search ...");

        jMenu1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenu1.setText("File");
        jMenu1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jMenuBar1.add(jMenu1);

        jMenu2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenu2.setText("Edit");
        jMenu2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jMenuBar1.add(jMenu2);

        jMenu3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenu3.setText("Help");
        jMenu3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(153, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jComboBox2, jLabel1, jLabel2});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jSpinner1, jSpinner2});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextField1)
                        .addGap(14, 14, 14)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jComboBox1, jComboBox2, jDateChooser1, jLabel1, jLabel2, jLabel3, jLabel4, jLabel8, jSpinner1, jSpinner2});

        pack();
    }// </editor-fold>                        

    private void displayDetails(int selectedIndex){
        
        jComboBox1.setSelectedIndex(text_comboBox());
        jSpinner1.setValue((Integer)(jTable1.getValueAt(selectedIndex, 2)));
        jSpinner2.setValue((Integer)(jTable1.getValueAt(selectedIndex, 3)));
        jDateChooser1.setDate((Date)(jTable1.getValueAt(selectedIndex, 4)));
        jComboBox2.setSelectedItem((String)(jTable1.getValueAt(selectedIndex, 5)));
        
    }
    
    public Integer text_comboBox(){
        String text = (String)(jTable1.getValueAt(jTable1.getSelectedRow(), 1));
        Integer index = 0;
        if(text.equals("Bàn")) index = 0;
        else if(text.equals("Ghế nhựa")) index = 1;
        else if(text.equals("Ghế băng")) index = 2;
        else if(text.equals("Khăn trải bàn")) index = 3;
        else if(text.equals("Micro")) index = 4;
        else if(text.equals("Tivi")) index = 5;
        return index;
    }
    
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {                                    
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN){
            int selectedIndex = jTable1.getSelectedRow();
            displayDetails(selectedIndex);
        }
    }                                   

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {                                     
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        displayDetails(selectedRow);
    }                                    

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        //jDateChooser1.setDate(java.sql.Date.valueOf("2020-01-01"));
        //jComboBox1.setSelectedIndex(0);
        //jSpinner1.setValue(1);
        //jSpinner2.setValue(1);
        //jComboBox2.setSelectedIndex(0);
        java.util.Date date = jDateChooser1.getDate();
        java.sql.Date date1 = new java.sql.Date(date.getTime());
        String type = (String)jComboBox1.getSelectedItem().toString();
        Integer this_number = (Integer)jSpinner1.getValue();
        Integer before_number = (Integer)jSpinner2.getValue();
        String state = (String)jComboBox2.getSelectedItem().toString();
        
        
        String sql = "INSERT INTO quan_ly_hang_thang(maloai, SL_thang_nay, SL_thang_truoc, Ngay_kiem_tra, Hien_trang) VALUES (?, ?, ?, ?, ?)";
        
        try{
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/cnpm", "root", "");
            
            PreparedStatement pst = conn.prepareStatement(sql);
            
            pst.setString(1, type);
            pst.setInt(2, this_number);
            pst.setInt(3, before_number);
            pst.setDate(4, date1);
            pst.setString(5, state);
            pst.executeUpdate();
            pst.close();
            loadDataIntoTable();
        }catch(SQLException e){
            e.printStackTrace();
        }
    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        
        String sql = "UPDATE quan_ly_hang_thang SET maloai = ?, SL_thang_nay = ?, SL_thang_truoc = ?, Ngay_kiem_tra = ?, Hien_trang = ?  WHERE ID = ?";
        try{
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/mysqldb", "root", "");
            
            PreparedStatement pst = conn.prepareStatement(sql);
            
            java.util.Date date = jDateChooser1.getDate();
            java.sql.Date date1 = new java.sql.Date(date.getTime());
            String type = (String)jComboBox1.getSelectedItem().toString();
            Integer this_number = (Integer)jSpinner1.getValue();
            Integer before_number = (Integer)jSpinner2.getValue();
            String state = (String)jComboBox2.getSelectedItem().toString();
            Integer index = (Integer)jTable1.getValueAt(jTable1.getSelectedRow(), 0);
            
            pst.setString(1, type);
            pst.setInt(2, this_number);
            pst.setInt(3, before_number);
            pst.setDate(4, date1);
            pst.setString(5, state);
            pst.setInt(6, index);
            pst.executeUpdate();
            pst.close();
            loadDataIntoTable();
        }catch(SQLException e){
            e.printStackTrace();
        }
    }                                        

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        String sql = "DELETE FROM quan_ly_hang_thang WHERE ID = ?";
        try{
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/mysqldb", "root", "");
            
            PreparedStatement pst = conn.prepareStatement(sql);
            
            Integer index = (Integer)jTable1.getValueAt(jTable1.getSelectedRow(), 0);
            
            pst.setInt(1, index);
            pst.executeUpdate();
            pst.close();
            loadDataIntoTable();
        }catch(SQLException e){
            e.printStackTrace();
        }
    }                                        
 
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        String text = jTextField1.getText();
        List<quan_ly> list = new ArrayList<quan_ly>();
        try{
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/mysqldb", "root", "");
            String sql = "SELECT * FROM quan_ly_hang_thang WHERE (maloai LIKE '%"+text+"%') OR (SL_thang_nay LIKE '%"+text+"%') OR (SL_thang_truoc LIKE '%"+text+"%') OR (Ngay_kiem_tra LIKE '%"+text+"%') OR (Hien_trang LIKE '%"+text+"%')";
            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            
            while (rs.next()) {
                quan_ly ql = new quan_ly(rs.getInt("ID"),rs.getString("maloai"), rs.getInt("SL_thang_nay"), rs.getInt("SL_thang_truoc"), rs.getDate("Ngay_kiem_tra") ,rs.getString("Hien_trang"));
                list.add(ql);
            }
            
        }catch(SQLException e){
            e.printStackTrace();
        }
        
        model = new DefaultTableModel();
        Vector column = new Vector();
        column.add("Index");
        column.add("Loại");
        column.add("Số lượng tháng này");
        column.add("Số lượng tháng trước");
        column.add("Ngày kiểm tra");
        column.add("Hiện trạng");
        model.setColumnIdentifiers(column);
        for (int i = 0; i < list.size(); i++) {
            quan_ly ql = (quan_ly)list.get(i);
            Vector row = new Vector();
            row.add(ql.getId());
            row.add(ql.getID());
            row.add(ql.getThisNumber());
            row.add(ql.getBeforeNumber());
            row.add(ql.getDate());
            row.add(ql.getState());
            model.addRow(row);
        }

        jTable1.setModel(model);
    }                                        

    /**
     * @param args the command line arguments
     */
    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ban_giao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ban_giao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ban_giao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ban_giao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
                
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            	Ban_giao bangiao = new Ban_giao();
            	bangiao.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration
}
